// This is your Prisma schema file,
// learn more about it in the docs https//pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "cockroachdb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum TaskStatus {
  TASK
  IN_PROCESSING
  COMPLETED
  MARK_AS_COMPLETED
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now()) @updatedAt
  Tasks         Task[]
  Contacts      Contact[]
  accounts      Account[]
  sessions      Session[]
  reminders     Reminder[]
  Notes         Notes[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id          Int        @id @default(sequence())
  Task        String
  Status      TaskStatus @default(TASK)
  Time        String     @default("00:00:00")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
  userId      String
  description String?
  priority    String?
  reminder    DateTime?
  User        User       @relation(fields: [userId], references: [id])
}

model Contact {
  id        String   @id @default(cuid())
  Name      String
  Email     String?
  Number    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  User      User     @relation(fields: [userId], references: [id])
}

model Notes {
  id        String   @id @default(cuid())
  Title     String
  Content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  User      User     @relation(fields: [userId], references: [id])
}

model Reminder {
  id          String    @id @default(cuid())
  Title       String
  Description String?
  Email       String?
  Time        DateTime?
  Type        String?
  Status      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String?
  userId      String
  User        User      @relation(fields: [userId], references: [id])
}
